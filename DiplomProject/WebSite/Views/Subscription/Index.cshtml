@using Microsoft.AspNet.Identity
@using WebSite.Controllers

@model WebSite.Models.Subscription.SubscriptionsCreditsViewModel

@{
    ViewBag.Title = "Index";
}

<h2>@Resources.Subscription</h2>

<div class="row">
    @if (!Model.SubscriptionCreditsModel.UnlimitedAccess)
    {
        string callback = "http://" + HttpContext.Current.Request.Url.Host + ((HttpContext.Current.Request.Url.Host == "localhost") ? (":" + HttpContext.Current.Request.Url.Port) : "/TUFitness") + "/payment/PayPalPaymentNotification";
        PaymentController paymentController = new PaymentController();
        
        <div class="col-md-6">
            <h3 class="underline">
                @Html.DisplayNameFor(model => model.SubscriptionCreditsModel.Credits)
                @Html.DisplayFor(model => model.SubscriptionCreditsModel.Credits)
            </h3>

            @foreach (var product in Model.Products.Where(product => product.ProductTypeId == 1).ToList())
            {
                <div class="row very-small-margin">
                    <h4 class="pull-left">@product.Display @Resources.Credits </h4>
                    <span class="pull-right">
                        @product.Value.ToString("F") @Resources.Currency
                        <script async="async" src="https://www.paypalobjects.com/js/external/paypal-button.min.js?merchant=admin@tu.com"
                                data-button="buynow"
                                data-name="@product.Name"
                                data-quantity="1"
                                data-amount=@paymentController.ConvertBGNToGBP(product.Value.ToString().Replace(",","."))
                                data-currency="GBP"
                                data-callback=@callback
                                data-custom=@HttpContext.Current.User.Identity.GetUserId()
                                data-env="sandbox">
                        </script>
                    </span>
                </div>
            }
        </div> 
        
        <div class="col-md-6">
            <h3 class="underline">
                @Html.DisplayNameFor(model => model.SubscriptionCreditsModel.ActiveUntil)
                @(Model.SubscriptionCreditsModel.ActiveUntil.HasValue ? Model.SubscriptionCreditsModel.ActiveUntil.Value.ToString("dd/MM/yyyy") : "--/--/----")
            </h3>

            @foreach (var product in Model.Products.Where(product => product.ProductTypeId == 2).ToList())
            {
                <div class="row very-small-margin">
                    <h4 class="pull-left">@product.Display @Resources.Month</h4>
                    <span class="pull-right">
                        @product.Value.ToString("F") @Resources.Currency
                        <script async="async" src="https://www.paypalobjects.com/js/external/paypal-button.min.js?merchant=admin@tu.com"
                                data-button="buynow"
                                data-name="@product.Name"
                                data-quantity="1"
                                data-amount=@paymentController.ConvertBGNToGBP(product.Value.ToString().Replace(",","."))
                                data-currency="GBP"
                                data-callback=@callback
                                data-custom=@HttpContext.Current.User.Identity.GetUserId()
                                data-env="sandbox">
                        </script>
                    </span>
                </div>
            }
        </div> 
    }
    else
    { 
        <div class="col-md-12">
            @Html.DisplayNameFor(model => model.SubscriptionCreditsModel.UnlimitedAccess)
            @Html.DisplayFor(model => model.SubscriptionCreditsModel.UnlimitedAccess)
        </div>
    }

    @Html.Hidden("HideFooter", new { }, new { id = "hideFooter" })
</div>
